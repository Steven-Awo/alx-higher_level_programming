User Guide for Matrix Multiplication Function

This module provides a function for matrix multiplication called ``lazy_matrix_mul(m_a, m_b)``.

Usage
=====

The function ``lazy_matrix_mul(...)`` takes two matrices, ``m_a`` and ``m_b``, and returns their matrix multiplication.

Example Usage
-------------

```python
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> m_a = [
...     [1, 2],
...     [3, 4]
... ]
>>> m_b = [
...     [1, 2],
...     [3, 4]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[ 7 10]
 [15 22]]

Handling Invalid Inputs
The function validates the inputs to ensure proper functionality.

Invalid Number of Arguments
A minimum of two arguments, m_a and m_b, must be provided.

>>> print(lazy_matrix_mul(m_a))
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

>>> print(lazy_matrix_mul())
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

ValueErrors
If the matrices cannot be multiplied (i.e., the row count of m_a is not equal to the column count in m_b), a ValueError is raised.

>>> m_a = [
...     [1, 2],
...     [3, 4]
... ]
>>> m_b = [
...     [1, 2],
...     [2, 3],
...     [4, 5]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)


Invalid Matrices
The parameters m_a and m_b must be lists of lists containing only integers or floats. If not, a ValueError or TypeError is raised.

>>> print(lazy_matrix_mul("not a list", [[1, 2]]))
Traceback (most recent call last):
ValueError: Scalar operands are not allowed, use '*' instead

>>> print(lazy_matrix_mul([[1, 2]], "also not a list"))
Traceback (most recent call last):
ValueError: Scalar operands are not allowed, use '*' instead

>>> print(lazy_matrix_mul("not a list", "also not a list"))
Traceback (most recent call last):
ValueError: Scalar operands are not allowed, use '*' instead
